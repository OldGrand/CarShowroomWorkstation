<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="CalendarStyle" TargetType="{x:Type Calendar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarButton}">
                    <!-- Wrapping in ViewBox will enlarge calendar of that size.-->
                    <Viewbox Height="200"
                         Width="200">
                        <CalendarItem x:Name="PART_CalendarItem"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"/>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="RadioButton.FontSize" Value="35"/>
        <Setter Property="RadioButton.Foreground" Value="White"/>
    </Style>

    <!--<Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
              Height="{Binding ActualHeight, ElementName=PART_Content}" >
                                <Ellipse x:Name="Border"  
                Fill="{StaticResource NormalBrush}"
                StrokeThickness="1"
                Stroke="{StaticResource NormalBorderBrush}" />
                                <Ellipse x:Name="CheckMark"
                Margin="4"
                Fill="{StaticResource GlyphBrush}" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Name="PART_Content"
            Margin="4,0,0,0"
            VerticalAlignment="Center"
            HorizontalAlignment="Left"
            RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="{StaticResource DarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="Stroke" Value="{StaticResource GlyphBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Fill" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="Stroke" Value="#40000000" />
                            <Setter Property="Foreground" Value="#80000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="LabelStyle">
        <Setter Property="Label.FontSize" Value="35" />
        <Setter Property="Label.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Label.VerticalContentAlignment" Value="Bottom" />
    </Style>

    <Style x:Key="TextBoxStyle">
        <Setter Property="TextBox.FontSize" Value="25" />
        <Setter Property="TextBox.Foreground" Value="White" />
        <Setter Property="TextBox.Height" Value="50" />
        <Setter Property="TextBox.Margin" Value="20 0 20 0" />
        <Setter Property="TextBox.VerticalAlignment" Value="Top" />
        <Setter Property="TextBox.CaretBrush" Value="White" />
        <Setter Property="TextBox.VerticalContentAlignment" Value="Center" />
        <Setter Property="Panel.ZIndex" Value="-10" />
    </Style>

    <Style x:Key="ButtonStyle">
        <Setter Property="Button.FontSize" Value="25" />
        <Setter Property="Button.Height" Value="45" />
        <Setter Property="Button.Width" Value="180" />
    </Style>

    <ControlTemplate x:Key="Button_Template" TargetType="{x:Type Button}">
        <Border BorderBrush="#333" BorderThickness="1" 
                                TextBlock.Foreground="#ddd"  Name="myBorder">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#676767" Offset="0"></GradientStop>
                    <GradientStop Color="#474747" Offset="1"></GradientStop>
                </LinearGradientBrush>
            </Border.Background>
            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"
                              VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="myBorder" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#777777" Offset="0"></GradientStop>
                            <GradientStop Color="#575757" Offset="1"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="myBorder" Property="Cursor" Value="Hand"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="myBorder" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#939292" Offset="0"></GradientStop>
                            <GradientStop Color="#575757" Offset="1"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="myBorder" Property="Cursor" Value="Hand"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="myBorder" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#444" Offset="0"></GradientStop>
                            <GradientStop Color="#222" Offset="1"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="myBorder" Property="Opacity" Value="0.4"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TextBox_Template" TargetType="{x:Type Control}">
        <Border Style="{StaticResource TB_BorderStyle}">
            <ScrollViewer x:Name="PART_ContentHost" Background="#3F3F46"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="ErrorTextBox_Template" TargetType="{x:Type Control}">
        <Border Style="{StaticResource TB_ErrorBorderStyle}">
            <ScrollViewer x:Name="PART_ContentHost" Background="#3F3F46"/>
        </Border>
    </ControlTemplate>
    
</ResourceDictionary>